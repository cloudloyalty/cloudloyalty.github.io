openapi: 3.0.0
info:
  title: MAXMA Messaging (обратный API)
  version: '2022-09-22 beta'
  x-logo:
    url: logo.png
  description: |
    # Общие сведения
    
    ⚠️ Это бета-версия протокола обмена. Вы можете предложить свои поправки в него.

    Этот универсальный протокол разработан, чтобы система MAXMA смогла отправлять Push-уведомления,
    используя вашу существующую инфраструктуру их доставки.

    MAXMA умеет формировать данные в описанном здесь формате и отправлять
    их на любой внешний адрес. Таким образом, реализовав этот протокол на своей стороне
    и просто сообщив нам адрес для подключения, вы позволите MAXMA пользоваться
    вашим сервисом для отправки сообщений.

    ## Сценарий использования

    Когда сообщение направляется вашему сервису, MAXMA прикладывает к нему информацию,
    достаточную для того, чтобы определить, какому именно пользователю его нужно направить,
    а также текст сообщения и другие параметры.

    В ответ на отправку сообщения, ваш сервис передает _статус доставки_. Скорее всего,
    сразу же после того, как сообщение попадает к вам, статус доставки еще не известен,
    поэтому предусмотрен _промежуточный статус_ `pending`, который означает, что сообщение вами принято,
    но судьба его станет известна позднее. Полный перечень приведен ниже.

    По каждому отправленному через ваш сервис сообщению MAXMA будет запрашивать статус.
    Для этого предусмотрен отдельный метод `/get-status`. Задача вашего сервиса - отдать
    корректный текущий статус доставки или `pending`, если информации о статусе пока нет.
    Получая `pending`, MAXMA будет повторять запрос статуса для этого сообщения
    через некоторый интервал времени.

    ## Уведомления о статусах

    Существует возможность более оперативно сообщать нам о смене статуса доставки сообщения.
    Для этого _ваша сторона_ делает вызов на сервер MAXMA и передает информацию об изменениях
    в статусе сообщений. Чтобы подробнее узнать о формате такого запроса, посмотрите описание
    метода `/notify` ниже.

    ## Формат запросов и ответов

    Все HTTP-запросы выполняются методом POST, тело запроса содержит JSON-документ. В ответе
    возвращается также JSON-документ.

    Каждый запрос содержит HTTP-заголовки: `Accept: application/json` и `Content-Type: application/json`.

    Для строк используется кодировка UTF-8.

    Дата и время форматируется в соответствии с RFC 3339 "Date and Time on the Internet: Timestamps"
    (http://tools.ietf.org/html/rfc3339). Пример: `1996-12-19T16:39:57-08:00`.

    Основные ошибки принятия запроса обозначаются кодами ответа HTTP:
    `4XX` - неверный запрос, повторение запроса не имеет смысла;
    `5XX` - ошибка на сервере, запрос нужно повторить позднее.
    При ответах сервера, отличных от ```200 OK```, тело сообщения не рассматривается как JSON-документ.

    ## Статусы доставки

    Промежуточный статус:
      - **pending**

        Запрос на отправку обрабатывается, конечный статус доставки пока не известен. Сервис MAXMA повторит запрос статуса позднее.

    Конечные статусы:
      - **delivered**

        Cообщение успешно доставлено получателю.

      - **rejected**

        Cообщение не доставлено по временным причинам.

        Если повторить отправку другого сообщения для того же получателя через какой-то промежуток времени (день, неделя, месяц и т.д.), то есть шанс, что сообщение будет доставлено.

        Примеры причин для статуса _rejected_:

        - получатель временно вне зоны доступа;
        - у него не установлено приложение, которое умеет принимать такие сообщения;
        - он временно отказался от приема таких сообщений;
        - сеть перегружена.

      - **undeliverable**

        Cообщение не доставлено по постоянным причинам.

        Такой статус возвращется для сообщений, получатель которых не существует и не сможет принять сообщение, даже если направить его через какой-то промежуток времени (день, неделю, месяц и т.д.).

        Примеры причин для статуса _undeliverable_:

        - неверный формат номера телефона или адреса почты;
        - получатель не найден;
        - получатель навсегда отказался от получения таких сообщений;
        - адрес получателя вне зоны обслуживания провайдера.

      - **error**

        При отправке произошла проблема, которая требует исправления.

        Примеры причин для статуса _error_:

        - ошибка в интеграции;
        - ошибка на сервере;
        - рептилоиды захватили дата-центр.

  contact:
    name: Поддержка
    email: support@maxma.com

servers:
  - url: https://your-host.com
    description: Ваш сервер

paths:
  /send:
    post:
      summary: Отправка сообщений
      description: |
        Запрос делается с сервера MAXMA️ на ваш сервер. Обязательный метод.

        Отправляет одно или несколько сообщений. В ответе ожидается статус доставки для каждого переданного в запросе сообщения с сохранением порядка элементов в массиве.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'

      responses:
        200:
          description: Запрос обработан успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingStatusReply'
        500:
          description: Ошибка на сервере, запрос нужно повторить

  /get-status:
    post:
      summary: Получение статуса
      description: |
        ⚠️ Метод в разработке.

        Запрос делается с сервера MAXMA️ на ваш сервер.

        Выясняет актуальный статус доставки для каждого из сообщений, переданных в запросе с сохранением порядка элементов в массиве.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStatusRequest'

      responses:
        200:
          description: Ответ при успешной обработке запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingStatusReply'
        500:
          description: Ошибка на сервере, запрос нужно повторить

  /notify:
    post:
      summary: Уведомление о смене статуса
      description: |
        ⚠️ Метод в разработке.

        Запрос делается с вашего сервера️ на сервер MAXMA. Не обязательный, но желательный метод.

        Уведомляет MAXMA о смене статуса доставки по одному или нескольким сообщениям.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendingStatusReply'

      responses:
        200:
          description: Ответ при успешной обработке запроса
        500:
          description: Ошибка на сервере, запрос нужно повторить

components:
  schemas:
    SendRequest:
      type: object
      properties:
        messages:
          title: Список сообщений для отправки
          type: array
          items:
            $ref: '#/components/schemas/Message'
        notifyUrl:
          title: |
            Адрес, на который нужно отправить запрос /notify.

            Описание формата запроса смотрите ниже.
          type: string
      required:
        - messages
      example:
        messages:
          - msgid: 'e292c954-5fbf-4b9d-afd5-80b979db476e'
            type: mobilePush
            to:
              phoneNumber: '+79998885577'
              card: '00000000667766'
              externalId: '147c5532-daf6-497b-9294-ad437f3223d6'
            mobilePush:
              title: Заголовок
              text: Текст пуш-сообщения
              contentUrl: https://www.mydomain.com/images/image1.jpg
        notifyUrl: https://app.cloudloyatly.ru/notify

    Message:
      title: Сообщение
      type: object
      properties:
        msgid:
          title: Уникальный код сообщения, назначенный вызывающей стороной
          type: string
        type:
          title: |
            Тип сообщения:
            - mobilePush - пуш-уведомление в мобильное приложение
            
            Другие типы могут добавиться позднее.
          type: string
          enum:
            - mobilePush
        from:
          title: Информация об отправителе
          type: object
          properties:
            applicationCode:
              title: Код приложения для доставки пуш-уведомления
              type: string
        to:
          title: Информация о получателе
          type: object
          properties:
            phoneNumber:
              title: Номер телефона клиента
              type: string
            card:
              title: Номер или штрих-код карты клиента
              type: string
            externalId:
              title: Внешний идентификатор клиента
              type: string
            email:
              title: Адрес электронной почты клиента
              type: string
        mobilePush:
          $ref: '#/components/schemas/MobilePushMessage'
      required:
        - msgid
        - type
        - from
        - to

    MobilePushMessage:
      title: Пуш-уведомление в мобильное приложение
      type: object
      properties:
        title:
          title: Заголовок пуш-сообщения
          type: string
        text:
          title: Текст пуш-сообщения
          type: string
        contentUrl:
          title: Адрес картинки для отображения вместе с пуш-уведомлением
          type: string
      required:
        - text

    MessageStatus:
      title: Статус доставки сообщения
      type: object
      properties:
        msgid:
          title: |
            Код сообщения, назначенный сервером (вашей стороной).
            
            Если на стороне сервера код не присваивается, повторите в этом поле код, полученный в запросе.
          type: string
        status:
          title: Статус доставки сообщения
          type: string
          enum:
            - pending
            - delivered
            - rejected
            - undeliverable
            - error
        statusDescription:
          title: Пояснение к статусу
          type: string
        updatedAt:
          title: Дата и время смены статуса
          type: string
          format: date-time
      required:
        - msgid
        - status
        - updatedAt

    GetStatusRequest:
      title: Список сообщений, для которых запрашивается статус
      type: object
      properties:
        msgids:
          type: array
          items:
            type: string
      required:
        - msgids
      example:
        msgids:
          - 'e292c954-5fbf-4b9d-afd5-726fa647c403'
          - 'e292c954-5fbf-4b9d-afd5-80b979db476e'

    SendingStatusReply:
      title: Статус доставки сообщений
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
      required:
        - statuses
      example:
        statuses:
          - msgid: 'e292c954-5fbf-4b9d-afd5-726fa647c403'
            status: pending
            updatedAt: '2020-02-17T14:53:20+03:00'
          - msgid: 'e292c954-5fbf-4b9d-afd5-80b979db476e'
            status: rejected
            updatedAt: '2020-02-17T15:38:26+03:00'
            statusDescription: 'Destination forbidden'
